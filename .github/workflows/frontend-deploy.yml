name: Frontend CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-deploy.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'frontend/**'

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'yarn'
        cache-dependency-path: frontend/yarn.lock
    
    - name: Install dependencies
      working-directory: ./frontend
      run: yarn install --frozen-lockfile
    
    - name: Run type check
      working-directory: ./frontend
      run: yarn type-check
    
    - name: Run linting
      working-directory: ./frontend
      run: yarn lint
    
    - name: Run tests (if any)
      working-directory: ./frontend
      run: yarn test --passWithNoTests || true

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'yarn'
        cache-dependency-path: frontend/yarn.lock
    
    - name: Install dependencies
      working-directory: ./frontend
      run: yarn install --frozen-lockfile
    
    - name: Build application
      working-directory: ./frontend
      env:
        NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
        NEXT_PUBLIC_SCALEWAY_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_SCALEWAY_PROJECT_ID }}
        NEXT_PUBLIC_SCALEWAY_REGION: ${{ secrets.NEXT_PUBLIC_SCALEWAY_REGION }}
        NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY }}
        NEXT_PUBLIC_MAPBOX_TOKEN: ${{ secrets.NEXT_PUBLIC_MAPBOX_TOKEN }}
      run: yarn build
    
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.DEPLOY_HOST }}
        username: ${{ secrets.DEPLOY_USER }}
        key: ${{ secrets.DEPLOY_SSH_KEY }}
        port: ${{ secrets.DEPLOY_PORT }}
        script: |
          cd /var/www/komon.ptilab.fr
          git pull origin main
          cd frontend
          yarn install --frozen-lockfile
          yarn build
          sudo systemctl restart nginx
          echo "Frontend deployed successfully!" 